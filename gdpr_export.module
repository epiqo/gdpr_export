<?php

/**
 * @file
 * Code for the GDPR export module.
 */


use Symfony\Component\Serializer\Serializer;
use Symfony\Component\Serializer\Encoder\JsonEncoder;
use Symfony\Component\Serializer\Encoder\XmlEncoder;


/**
 * Returns a list of normalizers and their weight that can be used for the gdpr
 * export.
 */
function gdpr_export_retrieve_normalizers() {
  // Register all normalizers. The hooks should return an array, with the
  // normalizer classes as key and their weight as value. e.g.
  // ['GDPRExportSpecializedNormalizer' => -10]
  $normalizers = module_invoke_all('gdpr_export_normalizer_info');
  // Allow modules to the normalizer list.
  drupal_alter('gdpr_export_normalizer_info', $normalizers);

  return $normalizers;
}

/**
 * Retrieves and instantiates all normalizers in the correct order according to
 * their weight.
 */
function gdpr_export_init_normalizers() {
  $normalizer_classes = gdpr_export_retrieve_normalizers();
  asort($normalizer_classes);
  $normalizers = [];
  foreach ($normalizer_classes as $class => $weight) {
    $normalizers[] = new $class();
  }
  return $normalizers;
}

/**
 * Serializes the given entity.
 *
 * @param \EntityDrupalWrapper $entity
 *   The entity to export.
 * @param string $type
 *   Type of export, either 'json' or 'xml' (default).
 * @param string $xml_root_name
 *   An optional name for the root node. If not set, it will be set to the
 *   entities type name. Only applicable if $type is 'xml'.
 *
 * @return string
 *   The serialized entity in the selected format, by default xml.
 */
function gdpr_export_serialize_entity(EntityDrupalWrapper $entity, $type='xml', $xml_root_name = NULL) {
  if (empty($xml_root_name)) {
    $xml_root_name = $entity->type();
  }

  $normalizers = gdpr_export_init_normalizers();
  $encoders = [new JsonEncoder(), new XmlEncoder($xml_root_name)];
  $serializer = new Serializer($normalizers, $encoders);

  return $serializer->serialize($entity, $type);
}

/**
 * Implements hook_gdpr_export_normalizer_info().
 */
function gdpr_export_gdpr_export_normalizer_info() {
  // Export the default normalizers.
  return [
    'GDPRExportAddressFieldNormalizer' => -10,
    'GDPRExportDateNormalizer' => -5,
    'GDPRExportTaxonomyTermNormalizer' => 0,
    'GDPRExportImageFieldNormalizer' => 0,
    'GDPRExportListNormalizer' => 0,
    'GDPRExportUserNormalizer' => 5,
    'GDPRExportFieldCollectionItemNormalizer' => 5,
    'GDPRExportGenericDataNormalizer' => 5,
  ];
}

/**
 * Register a managed file that should be sent with the export and return them.
 *
 * @param integer|null $fid
 *   The optional managed file id, to be added to the export. If not set, then
 *   the function will return the file ids that have been added so far.
 *
 * @return array
 *   The file ids, which should be added to export in an array.
 */
function gdpr_export_register_file_for_export($fid = NULL) {
  $data = &drupal_static(__FUNCTION__);
  if (empty($data)) {
    $data = [];
  }

  // Only add the passed file id if it's not NULL and not in the array yet.
  if ($fid !== NULL && !in_array($fid, $data)) {
    $data[] = $fid;
  }

  return $data;
}
